package com.sist.main;
/*
 * 상속
 * 	=> 기존의 클래스를 재사용(메소드 변경, 메소드 추가)
 * 	=> extends
 * 	=> 단일 상속
 * 	=> 객체지향
 * 		재사용 / 데이터 손실 방지 / 변경, 추가 용이
 * 				| 캡슐화			| 다형성(오버리이딩, 오버로딩)
 * 		---------------------------------
 * 		| 상속
 * 		=> 제약 조건이 많다
 * 		=> 소스를 볼 수 없다 => 분석(가독성)
 * 		=> 상위 클래스 => 하위 클래스 메모리 할당 => 실행 속도가 늦다
 * 		=> 상속 => 보완 : ***
 * 			1) 장점
 * 				=> 중복을 제거
 * 				=> 코드가 간결하다
 * 				=> 메소드 기능을 필요 시마다 변경
 * 
 * 				=> 상위 클래스
 * 					: 공통적인 기능
 * 						영화관 : 포스터 출력 / 예약 / 극장 / 회원가입 / 로그인...
 * 								영화관
 * 								|
 * 						CGV / 롯데시네마 / 메가박스
 * 				=>	하위 클래스
 * 
 * github
 */
class A {
	public A(String s) {
		System.out.println(s); // 상위 클래스의 생성자가 매개변수를 필요로 함
	}
}
class B extends A{
	public B(String s) {
		super(s); // 상위 클래스 메모리 할당
	}
}
public class 상속_1 {
	public static void main(String[] args) {
		
	}
}
