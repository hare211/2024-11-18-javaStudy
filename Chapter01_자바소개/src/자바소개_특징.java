// ctrl + space
// sysout / sout
// 주석 ==> 한줄 주석 ==> 가독성
/*
 * 	여러 줄 주석
 * 	
 * 	1. 변수 : 데이터형 (메모리에 저장하는 크기)
 * 		===============================
 * 		데이터 저장 : 메모리에 저장 => RAM (프로그램 종료시에 사라진다)
 * 				   => 파일 / RDBMS(오라클) => 공유 데이터
 * 	2. 사용자 요청 따라 처리 (데이터 처리)
 * 		=> 연산자 / 제어문 
 * 	3. 여러개를 동시에 저장
 * 		=> 같은 데이터만 저장 (정수, 실수...) 배열
 * 		=> 다른 데이터 저장 : 클래스 (*********)
 * 							| 재사용 (수정 / 추가)
 * 	4. 데이터 모아서 관리 : 배열, 클래스
 * 	   명령문을 모아서 관리
 * 		================ 메소드
 * 	5. 객체 지향 프로그램
 * 		= 가독성
 * 		= 재사용
 * 		= 최적화
 * 	6. 예외처리 : 종료하지 않는 프로그램
 *  =============================== 기본 문법
 *  7. 라이브러리 : 자바에서 지원하는 기능 (클래스 / 메소드)
 *     ========
 *     	IO / 네트워크
 *     	=========== Web 프로그램
 *  8. 미니프로젝트 : 파일 기반
 *  
 *  ==============================================
 *  2page
 *  자바 실행 과정
 *  ===========
 *   => 프로그램 언어 : C / C++, Java, C#, Python...
 *   	=========
 *   	| 자바 언어는 프로그래머만 인식하는 언어 => 컴퓨터는 모르는 언어
 *   	| => 컴퓨터가 인식할 수 있게 변경 => 컴파일
 *   		 =======(0, 1)
 *   		 예) 'A' => 65 ==> 100001
 *   			 => 모든 문자마다 번호를 가지고 있다 (UniCode)
 *   			 => 0~65535
 *   	  => C / C++ => A.c ====> A.obj =====> A.exe
 *   							======== 컴파일 된 파일
 *   									| 바이트 코드 : 모든 운영체제에서 동일하게 사용
 *   	  => Java => A.java ====> A.class =====> 화면 출력
 *   						javac			java
 *   						======			======
 *   						컴파일			한 줄씩 읽어서 출력
 *   											|
 *   											인터프리터
 *   		 => 소스 검증 (2번 : 컴파일 / 실행 시) => 보안
 *   		 => 제임스 고슬링 : 자바는 절대 해킹이 어렵다
 *   		================================================= 5 page 이미지 참조
 *   			** 이클립스는 코딩 시마다 자동 컴파일이 된다
 *   									======== 바로 에러 출력
 *   			   javac는 자동 처리 => java(실행) => ctrl + f11
 *   
 *   	6 page : 개발 환경 구축
 *   	1. JDK : jdk.java.net/17 (다운로드 위치)
 *   	   => oracle / openjdk (무료)
 *   			=> 1.8 이상은 유료
 *   	

 */
public class 자바소개_특징 {
	public static void main(String[] args) {
		
	}

}
