/*
 * 	HTML / CSS / JavaScript
 * 	=======================
 * 	자바 (서버 연결) / 자바스크립트 (브라우저에서만)
 * 	데이터 저장 : 변수 => 데이터형
 * 						| 정수 => byte / int / long
 * 						| 실수 => double 
 * 						| 논리 => boolean
 * 						| 문자 => char
 * 						| 문자열 => String
 * 	데이터 가공 : 연산자 / 제어문
 * 		1) 연산자
 * 			=> 단항연산자
 * 				증감연산자 (++, --) => 한 개 증가 / 한 개 감소
 * 				부정연산자 ( ! ) => 예약일이 아닌 경우
 * 				형변환연산자 => 클래스형변환
 * 							---------
 * 							=> 상속 / 포함 / 라이브러리
 * 				=> UpCasting / DownCasting
 * 				   ---------   -----------
 * 					|자동형변환	|강제형변환
 * 									int a = 10.5
 * 											----
 * 											(double) => (int) 10.5
 * 						long a = 10;
 * 								---- int => 10L
 * 						연산 => 같은 데이터형끼리만 연산처리
 * 						10.5 + 10
 * 						--------------------------------> 20.5
 * 						*** char 는 연산이 된 경우 => 자동으로 int 로 변환
 * 			=> 이항연산자
 * 				산술연산자 : +, -, *, /, %
 * 				=> 산술규칙
 * 					1) 자동으로 같은 데이터형으로 변경 후 처리
 * 					2) int 이하 => char, short, byte => 연산이 되면 결과값은 int
 * 					+ : 산술 (더하기)
 * 						문자열 결합용으로 사용
 * 					7 + 7 + "7" + 7
 * 					-----
 * 					14 + "7"
 * 					--------
 * 					"147" + 7 => "1477" + 7 => "14777"
 * 
 *					/ : 나누기
 *						정수 / 정수 = 정수, 0 으로 나눌 수 없다
 *					% : 실제 결과값은 왼쪽편 부호를 따라간다
 *				비교연산자 : ==, !=, < > <= >=
 *						  -------
 *							JS : ===, !==
 *							오라클 : =, <>
 *							JSP : eq, ne => EL
 *				논리연산자 : &&, || => 다중조건
 * 			=> 삼항연산자 => 웹 (JSP => HTML + Java)
 * 							====================
 * 							| HTML / Java => 분리
 * 							==================== MVC
 * 							조건 ? 값1 : 값2
 * 							---
 * 							true => 값1
 * 							false => 값2
 * 							=> 이전페이지 / 다음페이지
 * 								-----------------
 * 							=> 웹 핵심 : 사용자 편리성
 * 										---------
 * 		2) 제어문
 * 			1. 조건문
 * 				단일조건문		| 부정연산자 / 논리연산자 / 비교연산자
 * 					형식) if (조건문) {
 * 							조건이 true 일 때 처리 문장
 * 						 }
 * 						독립문장 => 단점은 속도가 느릴 수 있다
 * 				선택조건문 => 조건 true / 조건 false 일 때 나눠서 처리
 * 						=> 웹에서 가장 많이 사용되는 문장
 * 						=> 웹 => 무조건 결과값을 전송
 * 							로그인 => 성공 / 실패
 * 					형식)
 * 						if (조건문) {
 * 							조건이 true 일 때 처리 문장
 * 						} else {
 * 							조건이 false 일 때 처리 문장
 * 						}
 * 			2. 반복문
 * 				for : 반복 횟수가 지정
 * 								| false 면 종료
 * 						for(초기값; 조건식; 증가식) {
 * 							반복 수행 문장
 * 						}
 * 					=> 화면에 출력 : for-each
 * 						for(데이터형 변수 : 배열(컬렉션))
 * 										--------- 데이터 여러 개가 저장
 * 							=> 저장된 데이터를 1 개씩 읽어온다
 * 
 * 				while : 무한루프
 * 					초기값
 * 					while (조건식) {
 * 						반복문장
 * 						증가식
 * 					}
 * 			3. 반복제어문
 * 				break : 반복문을 종료
 * 				=> 프로그램을 종료
 * 					System.exit(0)
 * 								-- 0 정상종료 / 0 이 아닌 경우 비정상 종료
 * 				=> System.err / out. println() => 에러 / 정상 출력
 * 		--------------------------------------------------------------
 * 	배열 : 데이터를 묶어서 사용
 * 	문자열 : 문자를 여러 개 사용하는 부분
*/
public class 배열_정리 {

}
